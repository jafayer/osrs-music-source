{"version":3,"sources":["components/song.jsx","components/contextmenu.jsx","components/player.jsx","components/upnext.jsx","components/controls.jsx","components/mediaSession.js","resources/audiowrapper.js","components/instructions.jsx","App.js","index.js"],"names":["Song","state","to","this","props","song","title","replaceAll","onContextMenu","e","contextMenu","onClick","handleClick","onSwipeRight","addToQueue","tolerance","id","Component","ContextMenu","componentDidMount","document","addEventListener","close","play","preventDefault","componentWillUnmount","removeEventListener","console","log","className","style","y","x","Player","makeSongs","closeMenu","setState","contextMenuSong","pageX","pageY","addPopup","click","modeSelect","mode","playing","songs","map","i","UpNext","makeUpNext","queue","arr","elem","removeFromQueue","ctrlKey","metaKey","li","push","length","copy","class","type","checked","shuffle","toggleShuffle","standardQueue","manualQueue","Controls","playPause","loading","isPaused","skip","MediaSession","HAS_MEDIA_SESSION","window","navigator","mediaSession","updateMetadata","MediaMetadata","mediaMetadata","artwork","src","sizes","artist","metadata","onPlay","onPause","onNextTrack","setActionHandler","actionHandlerWrapper","playbackState","updatePositionState","actionHandler","positionState","duration","audio","playbackRate","position","currentTime","setPositionState","AudioWrapper","getSrc","setSong","url","getSong","pause","Audio","Instructions","hidden","showHide","href","App","success","message","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","failure","error","getActiveQueue","manual","auto","shuffleInMatch","onended","ended","songlist","data","history","listen","route","decoded","pathname","split","find","toLowerCase","loadedFromUrlChange","code","querySelector","focus","classList","remove","match","params","queryString","URLSearchParams","location","search","isShuffled","get","inserts","forEach","insert","apply","slice","activeQueue","Array","prototype","concat","vibrate","event","add","splice","loop","mediaSessionUpdate","album","copyToClipboard","path","replace","resQueue","join","clipboard","writeText","then","shuffled","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","ReactDOM","render","StrictMode","children","getElementById"],"mappings":"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","file":"static/js/main.3dc15a42.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Swipe from 'react-easy-swipe';\n\n\nimport {\n    Link\n  } from \"react-router-dom\";\n\n\nclass Song extends Component {\n    state = { }\n\n    render() {\n        return (\n            <Link to={this.props.song.title.replaceAll(\" \",\"_\")} onContextMenu={(e) => {this.props.contextMenu(e, this.props.song)}}>\n                <li key={this.props.song.id} onClick={(e) => {this.props.handleClick(e, this.props.song)}}>\n                    <Swipe onSwipeRight={() => {this.props.addToQueue(this.props.song)}} tolerance=\"100\">\n                        <p>{this.props.song.title}</p>\n                    </Swipe>\n                </li>\n            </Link>\n        );\n    }\n    \n}\n \nexport default Song;","import React, { Component } from 'react';\n\nclass ContextMenu extends Component {\n    state = { }\n    render() {\n        console.log(this.props);\n        return ( \n            <div className=\"contextMenu\" style={{\"top\": this.props.y, \"left\": this.props.x}}>\n                <div className=\"header\">\n                    <p>Choose Option</p>\n                </div>\n                <ul>\n                    <li onClick={(e) => {this.play(e,this.props.song)}}\n                        onContextMenu={(e) => {e.preventDefault()}}\n                    >Play <span>Song</span></li>\n                    <li onClick={(e) => {this.addToQueue(e,this.props.song)}}\n                        onContextMenu={(e) => {e.preventDefault()}}\n                    >Add to queue <span>Song</span></li>\n                </ul>\n            </div>\n         );\n    }\n    \n\n    componentDidMount = () => {\n        document.addEventListener('click', this.props.close);\n    }\n\n    play = (e,song) => {\n        e.preventDefault();\n        this.props.handleClick(null,song);\n    }\n\n    addToQueue = (e, song) => {\n        e.preventDefault();\n        this.props.addToQueue(song);\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('click',this.props.close);\n    }\n}\n \nexport default ContextMenu;","import React, { Component } from 'react';\nimport Song from './song';\nimport ContextMenu from './contextmenu';\n\nclass Player extends Component {\n    state = { \n        contextMenu: false\n    }\n\n    render() {\n        return ( \n\n            <>\n                {this.addPopup()}\n\n                <div className=\"player\">\n                    <div className=\"modeSelect\">\n                        <button \n                            onClick={() => {this.props.modeSelect(\"auto\")}}\n                            className={\"auto \" + (this.props.mode === \"auto\" ? \"active\" : \"\")}></button>\n                        <button \n                            onClick={() => {this.props.modeSelect(\"manual\")}}\n                            className={\"manual \" + (this.props.mode === \"manual\" ? \"active\": \"\")}></button>\n                        <button \n                            onClick={() => {this.props.modeSelect(\"loop\")}}\n                            className={\"loop \" + (this.props.mode === \"loop\" ? \"active\" : \"\")}></button>\n                    </div>\n                    <div className=\"playing\">Playing:<br /><span>\n                        {!this.props.playing && \"Choose a song!\"}\n                        {this.props.playing && this.props.playing.title}\n                    </span></div>\n                    <div className=\"songs\">\n                        <ul>\n                            {this.props.songs && this.props.songs.map(i => this.makeSongs(i))}\n                            {!this.props.songs && \"Please wait, loading!\"}\n                        </ul>\n                    </div>\n                </div>\n            </>\n         );\n    }\n\n    makeSongs = (song) => {\n        let elem = (\n          <Song \n            song={song}\n            handleClick={this.props.handleClick}\n            addToQueue={this.props.addToQueue}\n            contextMenu={this.contextMenu}\n          />\n        );\n    \n        return(elem);\n      }\n\n\n      // contextMenu setup\n      contextMenu = (e,song) => {\n        e.preventDefault();\n        this.closeMenu();\n        this.setState({\n            contextMenu: true,\n            contextMenuSong: song,\n            x: e.pageX,\n            y: e.pageY\n        }, () => {\n            this.addPopup();\n        });  \n    }\n\n    addPopup = () => {\n        if(this.state.contextMenu) {\n            let menu = (<ContextMenu\n                x={this.state.x}\n                y={this.state.y}\n                click={this.closeMenu}\n                song={this.state.contextMenuSong}\n                handleClick={this.props.handleClick}\n                addToQueue={this.props.addToQueue}\n                close={this.closeMenu}\n            />);\n            return(menu)\n        }\n    }\n\n    closeMenu = () => {\n        this.setState({\n            contextMenu: false,\n            x: null,\n            y: null\n        });\n    }\n\n}\n \nexport default Player;","import React, { Component } from 'react';\nimport Swipe from 'react-easy-swipe';\n\n\nclass UpNext extends Component {\n    state = {  }\n    render() {\n\n        return (\n            <div className=\"upNext\">\n                <h1>Up Next:</h1>\n                <p className=\"copy\" onClick={this.props.copy}>Copy link to queue <span className=\"material-icons\">content_copy</span></p>\n                <div className=\"shuffle\">\n                    <p>Shuffle?</p>\n                    <div class=\"switch\">\n                        <label>\n                            <input type=\"checkbox\" checked={this.props.shuffle} onClick={this.props.toggleShuffle} />\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                </div>\n                <ul>\n                    {this.props.mode === \"auto\" && this.makeUpNext(this.props.standardQueue)}\n                    {this.props.mode === \"manual\" && this.makeUpNext(this.props.manualQueue)}\n                </ul>\n            </div>\n        );\n    }\n\n    makeUpNext = (queue) => {\n        let arr = [];\n        for(let i = 0; i < queue.length; i++) {\n            let elem = (\n                <Swipe onSwipeRight={() => {this.props.removeFromQueue(i)}} tolerance=\"80\">\n                    <li key={i} onClick={(e) => {\n                        if(e.ctrlKey || e.metaKey) { // if ctrl/cmd, add to queue\n                            this.props.removeFromQueue(i)\n                        } else {\n                            e.preventDefault();\n                            this.props.handleClick(null,queue[i]);\n                            this.props.removeFromQueue(i)\n                        }\n                    }}\n                    \n                    li onContextMenu={(e) => {e.preventDefault(); this.props.removeFromQueue(i)}}>\n                        {queue[i].title}\n                    </li>\n                </Swipe>\n            );\n\n            arr.push(elem);\n        }\n\n        return(arr);\n    }\n}\n \nexport default UpNext;","import React, { Component } from 'react';\n\nclass Controls extends Component {\n    state = {  }\n    render() { \n        return (\n\n            <div className=\"controls\">\n                <button className=\"playPause\" onClick={this.props.playPause}><p className=\"material-icons\">{(this.props.loading ? \"refresh\" : (this.props.isPaused ? \"play_arrow\" : \"pause\"))}</p></button>\n                <button className=\"button\" onClick={this.props.skip}><p className=\"material-icons\">skip_next</p></button>\n            </div>\n        );\n    }\n}\n \nexport default Controls;","import React, { Component } from 'react';\r\n\r\nclass MediaSession extends Component {\r\n\r\n    render() {\r\n        \r\n        if(this.HAS_MEDIA_SESSION) {\r\n            this.updateMetadata();\r\n            this.mediaSession.playbackState = (this.props.isPaused ? \"paused\" : \"playing\");\r\n            this.updatePositionState();\r\n            console.log(\"mediasession status\" + this.mediaSession.playbackState);\r\n        }\r\n        return ( null);\r\n    }\r\n\r\n    HAS_MEDIA_SESSION = window && window.navigator && 'mediaSession' in window.navigator;\r\n    mediaSession = this.HAS_MEDIA_SESSION ? window.navigator.mediaSession : null;\r\n\r\n    updateMetadata = () => {\r\n        if('MediaMetadata' in window && window.MediaMetadata) {\r\n            let mediaMetadata = new window.MediaMetadata({\r\n                artwork: [\r\n                    {\r\n                      src: 'https://runetunes.com/album_cover.jpg',\r\n                      sizes: '640x640',\r\n                      type: 'image/jpg'\r\n                    }\r\n                  ],\r\n                artist: \"RuneScape Original Soundtrack\",\r\n                title: this.props.song ? this.props.song.title : \"Loading...\"\r\n            });\r\n\r\n            this.mediaSession.metadata = mediaMetadata;\r\n        }\r\n    }\r\n\r\n    actionHandlerWrapper(actionHandler) {\r\n        console.log(\"FASFASF\");\r\n        actionHandler();\r\n        this.updatePositionState();\r\n    }\r\n\r\n    updatePositionState() {\r\n        if ('setPositionState' in this.mediaSession && this.props.song) {\r\n            let positionState = {\r\n                duration: this.props.audio.audio.duration ? this.props.audio.audio.duration : 0,\r\n                playbackRate: this.props.audio.audio.playbackRate,\r\n                position: this.props.audio.audio.duration ? this.props.audio.audio.currentTime : 0\r\n            }\r\n            console.log(positionState);\r\n            this.mediaSession.setPositionState(positionState);\r\n        }\r\n      }\r\n\r\n    componentDidMount = () => {\r\n\r\n        const actionHandlers = [\r\n            ['play',     this.props.onPlay],\r\n            ['pause',    this.props.onPause],\r\n            ['nexttrack',this.props.onNextTrack],\r\n        ]\r\n\r\n        \r\n        if(this.HAS_MEDIA_SESSION) {\r\n            this.mediaSession.setActionHandler('play', () => {this.actionHandlerWrapper(this.props.onPlay)});\r\n            this.mediaSession.setActionHandler('pause', () => {this.actionHandlerWrapper(this.props.onPause)});\r\n            this.mediaSession.setActionHandler('nexttrack', () => {this.actionHandlerWrapper(this.props.onNextTrack)});\r\n\r\n            this.mediaSession.metadata = this.metadata;\r\n        }\r\n    }\r\n}\r\n \r\nexport default MediaSession;\r\n","class AudioWrapper {\n    constructor(song) {\n        this.audio = new Audio();\n        if(song){\n            this.song = song;\n            this.audio.src = song.url;\n        }\n    }\n\n    getSrc = () => {\n        return(this.audio.src);\n    }\n\n    setSong = (song) => {\n        this.song = song;\n        if(song.url) {\n            this.audio.src = song.url;\n        } else {\n            this.audio.src = \"\";\n        }\n        return(this.song);\n    }\n\n    getSong = () => {\n        return(this.song);\n    }\n\n    play = () => {\n        this.audio.play();\n    }\n\n    pause = () => {\n        this.audio.pause();\n    }\n}\n\nexport default AudioWrapper;","import React, { Component } from 'react';\r\n\r\nclass Instructions extends Component {\r\n    state = { \r\n        hidden: true\r\n     }\r\n    render() { \r\n        return (\r\n            <div className=\"instructions\">\r\n                <h1 onClick={this.showHide}>Instructions <i className=\"material-icons\">{this.state.hidden ? \"expand_more\" : \"expand_less\"}</i></h1>\r\n                <div className={this.state.hidden && \"hidden\"}>\r\n                    <p>Click on a song to play. To add a song to the queue, either <span className=\"code\">ctrl/cmd+click</span> or <span className=\"code\">right click</span> and select \"add to queue.\" On mobile, <span className=\"code\">swipe right</span> on the song.</p>\r\n                    <p>To remove a song from the queue, either <span className=\"code\">ctrl/cmd+click</span> or <span className=\"code\">right click</span>. On mobile, <span className=\"code\">swipe right</span> to remove a song from a queue.</p>\r\n                    <p>You can link to any song by entering the name in the url (i.e. <span className=\"code\">https://runetunes.com/sea_shanty2</span>. You can also create custom playlists and use the \"Copy link to queue\" button to save and share! Your playlist will load from that link every time.</p>\r\n                    <p>If you enable shuffling, your link will shuffle the songs every time you go to it. You can also shuffle the entire playlist by visiting <a href=\"https://runetunes.com/shuffle\">https://runetunes.com/shuffle</a></p>\r\n                </div>     \r\n            </div>\r\n        );\r\n    }\r\n\r\n    showHide = () => {\r\n        this.setState({hidden: !this.state.hidden});\r\n    }\r\n}\r\n \r\nexport default Instructions;","import React, { Component } from 'react';\nimport Player from './components/player';\nimport UpNext from './components/upnext';\nimport Controls from './components/controls';\nimport MediaSession from './components/mediaSession';\nimport './App.css';\nimport data from './data.json';\nimport AudioWrapper from './resources/audiowrapper';\nimport Instructions from './components/instructions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    loading: false,\n    isPaused: true,\n    mode: \"auto\",\n    manualQueue: [],\n    standardQueue: [],\n    shuffle: false,\n   }\n  render() {\n    return (\n      <div className=\"wrap\">\n        <div>\n          <Player\n            mode={this.state.mode}\n            modeSelect={this.modeSelect}\n            playing={this.state.playing}\n            songs={this.state.songlist}\n            makeSongs={this.makeSongs}\n            handleClick={this.handleClick}\n            addToQueue={this.addToQueue}\n          />\n          <Controls\n            isPaused={this.state.isPaused}\n            playPause={this.playPause}\n            skip={this.skip}\n            loading={this.state.loading}\n          />\n          <UpNext\n            mode={this.state.mode}\n            standardQueue={this.state.standardQueue}\n            manualQueue={this.state.manualQueue}\n            removeFromQueue={this.removeFromQueue}\n            handleClick={this.handleClick}\n            copy={this.copyToClipboard}\n            shuffle={this.state.shuffle}\n            toggleShuffle={this.toggleShuffle}\n          />\n          <Instructions />\n          <ToastContainer />\n        </div>\n        <MediaSession\n          isPaused={this.state.isPaused}\n          audio={this.audio}\n          song={this.state.song && this.state.song}\n          onPlay={this.audio.play}\n          onPause={this.audio.pause}\n          onNextTrack={this.skip}\n\n        />\n      </div>\n    );\n  }\n\n  // init logic\n  audio = new AudioWrapper();\n\n  success = (message) => {\n    console.log(toast);\n    toast.success(message, {\n      position: \"bottom-center\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n  }\n\n  failure = (message) => {\n    toast.error(message, {\n      position: \"bottom-center\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      });\n  }\n\n  getActiveQueue = (mode) => {\n    let map = {\n      manual: 'manualQueue',\n      auto: 'standardQueue'\n    }\n\n    return(map[mode]);\n  }\n\n  shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n  \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }\n\n  componentDidMount = () => {\n\n    this.audio.audio.onended = this.ended;\n\n    this.setState({\n      songlist: data.songs,\n      standardQueue: data.queue\n    });\n\n    this.props.history.listen((route) => {\n      console.log(this.props.history);\n      let path = route.pathname.split('/')[1];\n      let decoded = path.replaceAll(\"_\",\" \");\n      let song = data.songs.find(i => i.title.toLowerCase() === decoded.toLowerCase());\n      if(song) {\n        if(this.state.song) {\n          if(song.title !== this.state.song.title) {\n            this.loadedFromUrlChange = true;\n            this.handleClick(null,song);\n          }\n        }\n      }\n    });\n\n    document.addEventListener('keydown', e => {\n      if(e.code === \"Space\") {\n        e.preventDefault();\n        document.querySelector(\".playPause\").focus();\n        this.playPause();\n        document.querySelector(\".playPause\").focus();\n      } else if(e.code === 'ArrowRight' && e.ctrlKey) {\n        this.skip();\n      }\n    });\n\n    this.audio.audio.addEventListener('play', () => {\n      this.setState({\n        isPaused: false\n      }, () => {\n        console.log(\"Playing!\");\n      });\n    });\n\n    this.audio.audio.addEventListener('pause', () => {\n      this.setState({\n        isPaused: true\n      }, () => {\n        console.log(\"Paused!\");\n      });\n    });\n\n    this.audio.audio.addEventListener('canplay', () => {\n      this.setState({song: this.audio.song, loading: false}, () => {\n        document.title = \"RuneScape Music Player - \" + this.state.song.title;\n        if(!this.loadedFromUrlChange) {\n          this.props.history.push('/' + this.state.song.title.replaceAll(\" \",\"_\"));\n        } else {\n          this.loadedFromUrlChange = null;\n        }\n        document.querySelector('.playPause').classList.remove('loading');\n      });\n    });\n\n    let shuffleInMatch;\n\n    if(this.props.match) {\n      let match = this.props.match.params.song.replaceAll(\"_\",\" \");\n      let song = data.songs.find(i => i.title.toLowerCase() === match.toLowerCase());\n      if(song) {\n        this.handleClick(null,song);\n      } else if (match.toLowerCase() === \"shuffle\") {\n        shuffleInMatch = true;\n      }\n    }\n\n    let queryString = new URLSearchParams(this.props.location.search);\n    let isShuffled = (queryString.get('shuffle') === \"\") || (shuffleInMatch);\n\n    if(queryString.get('queue')) {\n      let version = queryString.get(\"v\");\n      let queue = queryString.get(\"queue\").split(\",\");\n      queue = queue.map(song => song.replaceAll(\"_\",\" \"));\n      let inserts = [];\n\n      queue.forEach(song => {\n        let insert = data.songs.find(i => i.title.toLowerCase() === song.toLowerCase());\n        if(insert) inserts.push(insert);\n      });\n\n      if(isShuffled) {\n        inserts = this.shuffle(inserts);\n      }\n\n      this.setState({mode: \"manual\", shuffle: isShuffled}, () => {\n        this.addToQueue.apply(null,inserts);\n      })\n    } else {\n      if(isShuffled) {\n        let queue = this.shuffle(data.songs.slice());\n\n        this.setState({mode: 'manual', shuffle: isShuffled}, () => {\n          this.addToQueue.apply(null, queue);\n        });\n      }\n    }\n\n    console.log(\"Shuffled? \" + this.state.shuffle);\n\n    if('mediasession' in navigator) {\n      navigator.mediaSession.setActionHandler('play', this.playPause);\n      navigator.mediaSession.setActionHandler('pause', this.playPause);\n      navigator.mediaSession.setActionHandler('nexttrack', this.skip);\n    }\n  }\n\n  // file fetching logic\n\n  addToQueue = (...songs) => {\n\n    let activeQueue = this.getActiveQueue(this.state.mode);\n    let queue = Array.prototype.concat(this.state[activeQueue], songs);\n  \n    this.setState({\n      [activeQueue]: queue\n    }, () => {\n      if('vibrate' in window.navigator) {\n        window.navigator.vibrate(25);\n      }\n    });\n  }\n\n  handleClick = (event, song) => {\n    if(event) { // if handleClick occurred from click event, check if should add to queue\n      if(this.state.mode !== \"loop\" && (event.ctrlKey || event.metaKey)) { // if ctrl/cmd, add to queue\n        event.preventDefault();\n        this.addToQueue(song);\n  \n        return;\n      }\n    }\n\n    if(this.state.playing) {\n      this.audio.pause();\n    }\n\n    const url = song.url;\n    console.log(url);\n\n    this.audio.setSong(song);\n    document.querySelector('.playPause').classList.add('loading');\n    \n    this.setState({\n      playing: song,\n      loading: true\n    }, () => {\n      this.audio.play();\n    });\n\n  }\n\n  skip = () => {\n    let activeQueue = this.getActiveQueue(this.state.mode);\n\n    let queue = this.state[activeQueue].slice();\n\n    if(queue.length === 0) {\n      this.audio.song = null;\n      this.audio.pause();\n      this.setState({\n        isPaused: true\n      });\n\n      return;\n    }\n\n    let play = queue.splice(0,1)[0];\n    this.setState({\n      [activeQueue]: queue\n    }, () => {\n      this.handleClick(null, play);\n    });\n  }\n\n  playPause = () => {\n\n    if(this.state.isPaused) {\n      if(this.audio.getSrc() === \"\" && this.state.mode !== \"loop\") { // advance to next song if there's a queue and no current track\n\n        let activeQueue = this.getActiveQueue(this.state.mode);\n\n        let queue = this.state[activeQueue].slice();\n\n        if(queue.length === 0) { // if queue is empty, break\n          return;\n        }\n\n        let play = queue.splice(0,1)[0];\n        this.setState({\n          [activeQueue]: queue\n        }, () => {\n          this.handleClick(null, play);\n        });\n      }\n      \n      this.audio.play();\n\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  // mode logic\n  /* For the purposes of making a more functional audio player,\n  the modes have been adjusted from what they would be in the in-game player:\n\n  Auto: after selected song ends, begins autoplay of pre-selected queue of songs\n  Manual: Allows for manual queues of songs\n  Loop: loops current song as normal*/\n\n  modeSelect = (mode, clicked=true) => {\n\n    if(mode === \"loop\") { \n      this.audio.audio.loop = true;\n    } else { // make sure loop is false if previously declared\n      this.audio.audio.loop = false;\n    }\n\n    this.setState({\n      mode: mode\n    }, () => {console.log(\"The mode is currently set to: \" + mode)});\n  }\n\n  ended = () => {\n    if(this.state.mode === \"loop\") {\n      return;\n    }\n\n    let activeQueue = this.getActiveQueue(this.state.mode);\n\n    if(this.state[activeQueue].length === 0) {\n      this.audio.pause();\n      return;   \n    }\n\n    let queue = this.state[activeQueue].slice();\n    let play = queue.splice(0,1)[0];\n    this.setState({\n      [activeQueue]: queue,\n    }, () => {\n      this.handleClick(null, play);\n      this.mediaSessionUpdate(play);\n    });\n  }\n\n  removeFromQueue = (i) => {\n    let activeQueue = this.getActiveQueue(this.state.mode);\n\n    let queue = this.state[activeQueue].slice();\n    queue.splice(i,1);\n\n    this.setState({\n     [activeQueue]: queue \n    }, () => {\n      if('vibrate' in window.navigator) {\n        window.navigator.vibrate([25,50,25]);\n      }\n    });\n  }\n\n  mediaSessionUpdate = (song) => {\n    if('mediaSession' in navigator) {\n      navigator.mediaSession.metadata = new window.MediaMetadata({\n        title: song.title,\n        album: 'RuneScape Original Soundtrack'\n      });\n    }\n  }\n\n  copyToClipboard = () => {\n    if('clipboard' in window.navigator) {\n      let baseurl = \"https://runetunes.com/\";\n      let path;\n      if(this.state.playing) {\n        path = this.state.playing.title.replace(' ', '_');\n      }\n      let queue = this.state[this.getActiveQueue(this.state.mode)].slice();\n      let resQueue = queue.map(song => song.title.replaceAll(' ','_'));\n      let url = baseurl+ (path ? path : \"\") + (resQueue.length > 0 ? (\"?queue=\"+resQueue.join(\",\")) : \"\") + (this.state.shuffle ? \"&shuffle\" : \"\");\n\n      window.navigator.clipboard.writeText(url).then(() => {\n        console.log(\"wrote to clipboard: \" + url);\n        if('vibrate' in window.navigator) {\n          window.navigator.vibrate(50,50,50);\n          this.success('Copied to clipboard!');\n        }\n      });\n    } else {\n      this.failure('Couldn\\'t copy to clipboard!');\n    }\n  }\n\n  toggleShuffle = () => {\n    this.setState({shuffle: !this.state.shuffle}, () => {\n      if(this.state.shuffle) {\n        let activeQueue = this.getActiveQueue(this.state.mode);\n        let copy = this.state[activeQueue].slice();\n        let shuffled = this.shuffle(copy);\n        this.setState({\n          [activeQueue]: shuffled\n        })\n      }\n    });\n  }\n}\n\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Route path=\"/:song\" children={(match) => {\n        return(<App {...match} />)\n      }}/>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}